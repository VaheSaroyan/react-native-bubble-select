{"version":3,"sources":["BubbleSelect.tsx"],"names":["RNBubbleSelect","BubbleSelect","onSelect","onDeselect","style","allowsMultipleSelection","children","bubbleSize","onRemove","removeOnLongPress","longPressDuration","width","height","backgroundColor","maxSelectedItems","bubbleProps","defaultStyle","flex","handleSelect","event","nativeEvent","handleDeselect","handleRemove","androidProps","Platform","select","android","onSelectNode","onDeselectNode","onRemoveNode","default","React","Children","map","child","cloneElement"],"mappings":"mWAAA,oDAEA,yC,6GAMA,GAAMA,CAAAA,cAAc,CAAG,wCAAuB,oBAAvB,CAAvB,CAkBA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAeI,IAdvBC,CAAAA,QAcuB,MAdvBA,QAcuB,CAbvBC,UAauB,MAbvBA,UAauB,CAZvBC,KAYuB,MAZvBA,KAYuB,4BAXvBC,uBAWuB,CAXvBA,uBAWuB,gCAXG,IAWH,uBAVvBC,QAUuB,MAVvBA,QAUuB,CATvBC,UASuB,MATvBA,UASuB,CARvBC,QAQuB,MARvBA,QAQuB,4BAPvBC,iBAOuB,CAPvBA,iBAOuB,gCAPH,IAOG,uBANvBC,iBAMuB,MANvBA,iBAMuB,iBALvBC,KAKuB,CALvBA,KAKuB,qBALf,GAKe,6BAJvBC,MAIuB,CAJvBA,MAIuB,sBAJd,GAIc,aAHvBC,eAGuB,MAHvBA,eAGuB,CAFvBC,gBAEuB,MAFvBA,gBAEuB,CADpBC,WACoB,0OACvB,GAAMC,CAAAA,YAAY,CAAG,CACnBC,IAAI,CAAE,CADa,CAEnBN,KAAK,CAALA,KAFmB,CAGnBC,MAAM,CAANA,MAHmB,CAArB,CAMA,GAAMM,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAA6C,CAChE,GAAIjB,QAAJ,CAAc,CACZA,QAAQ,CAACiB,KAAK,CAACC,WAAP,CAAR,CACD,CACF,CAJD,CAMA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACF,KAAD,CAA6C,CAClE,GAAIhB,UAAJ,CAAgB,CACdA,UAAU,CAACgB,KAAK,CAACC,WAAP,CAAV,CACD,CACF,CAJD,CAMA,GAAME,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACH,KAAD,CAA6C,CAChE,GAAIX,QAAJ,CAAc,CACZA,QAAQ,CAACW,KAAK,CAACC,WAAP,CAAR,CACD,CACF,CAJD,CAMA,GAAMG,CAAAA,YAAY,CAAGC,sBAASC,MAAT,CAAgB,CACnCC,OAAO,CAAE,CACPC,YAAY,CAAET,YADP,CAEPU,cAAc,CAAEP,cAFT,CAGPQ,YAAY,CAAErB,QAHP,CAIPD,UAAU,CAAVA,UAJO,CAKPM,eAAe,CAAfA,eALO,CAMPC,gBAAgB,CAAhBA,gBANO,CAD0B,CASnCgB,OAAO,CAAE,EAT0B,CAAhB,CAArB,CAYA,MACE,8BAAC,cAAD,wBACE,KAAK,CAAE,CAACd,YAAD,CAAeZ,KAAf,CADT,CAEE,uBAAuB,CAAEC,uBAF3B,CAGE,QAAQ,CAAEa,YAHZ,CAIE,UAAU,CAAEG,cAJd,CAKE,QAAQ,CAAEC,YALZ,CAME,qBAAqB,CAAEb,iBANzB,CAOE,iBAAiB,CAAEC,iBAPrB,CAQE,uBAAuB,CAAEG,eAR3B,EASMU,YATN,kEAWGQ,eAAMC,QAAN,CAAeC,GAAf,CAAmB3B,QAAnB,CAA6B,SAAC4B,KAAD,QAC5BH,gBAAMI,YAAN,CAAmBD,KAAnB,CAA0BnB,WAA1B,CAD4B,EAA7B,CAXH,CADF,CAiBD,CArED,C,aAuEed,Y","sourcesContent":["import React from 'react';\nimport { BubbleNode, BubbleProps } from './Bubble';\nimport {\n  NativeSyntheticEvent,\n  requireNativeComponent,\n  Platform,\n} from 'react-native';\n\nconst RNBubbleSelect = requireNativeComponent('RNBubbleSelectView');\n\nexport type BubbleSelectProps = Omit<BubbleProps, 'text' | 'id'> & {\n  onSelect?: (bubble: BubbleNode) => void;\n  onDeselect?: (bubble: BubbleNode) => void;\n  onRemove?: (bubble: BubbleNode) => void;\n  bubbleSize?: number;\n  allowsMultipleSelection?: boolean;\n  children: React.ReactNode;\n  style?: object;\n  width?: number;\n  height?: number;\n  removeOnLongPress?: boolean;\n  longPressDuration?: number;\n  backgroundColor?: string;\n  maxSelectedItems?: number;\n};\n\nconst BubbleSelect = ({\n  onSelect,\n  onDeselect,\n  style,\n  allowsMultipleSelection = true,\n  children,\n  bubbleSize,\n  onRemove,\n  removeOnLongPress = true,\n  longPressDuration,\n  width = 200,\n  height = 200,\n  backgroundColor,\n  maxSelectedItems,\n  ...bubbleProps\n}: BubbleSelectProps) => {\n  const defaultStyle = {\n    flex: 1,\n    width,\n    height,\n  };\n\n  const handleSelect = (event: NativeSyntheticEvent<BubbleNode>) => {\n    if (onSelect) {\n      onSelect(event.nativeEvent);\n    }\n  };\n\n  const handleDeselect = (event: NativeSyntheticEvent<BubbleNode>) => {\n    if (onDeselect) {\n      onDeselect(event.nativeEvent);\n    }\n  };\n\n  const handleRemove = (event: NativeSyntheticEvent<BubbleNode>) => {\n    if (onRemove) {\n      onRemove(event.nativeEvent);\n    }\n  };\n\n  const androidProps = Platform.select({\n    android: {\n      onSelectNode: handleSelect,\n      onDeselectNode: handleDeselect,\n      onRemoveNode: onRemove,\n      bubbleSize,\n      backgroundColor,\n      maxSelectedItems,\n    },\n    default: {},\n  });\n\n  return (\n    <RNBubbleSelect\n      style={[defaultStyle, style]}\n      allowsMultipleSelection={allowsMultipleSelection}\n      onSelect={handleSelect}\n      onDeselect={handleDeselect}\n      onRemove={handleRemove}\n      removeNodeOnLongPress={removeOnLongPress}\n      longPressDuration={longPressDuration}\n      magneticBackgroundColor={backgroundColor}\n      {...androidProps}\n    >\n      {React.Children.map(children, (child: any) =>\n        React.cloneElement(child, bubbleProps)\n      )}\n    </RNBubbleSelect>\n  );\n};\n\nexport default BubbleSelect;\n"]}